USE [AdventureWorksLT2022]
GO

SELECT [AddressID]
      ,[AddressLine1]
      ,[AddressLine2]
      ,[City]
      ,[StateProvince]
      ,[CountryRegion]
      ,[PostalCode]
      ,[rowguid]
      ,[ModifiedDate]
  FROM [SalesLT].[Address]

GO

-----JOINING-----

SELECT B.CUSTOMERID, A.ADDRESSLINE1, A.ADDRESSLINE2 
FROM SALESLT.ADDRESS AS A
INNER JOIN SALESLT.CUSTOMERADDRESS AS B
ON A.ADDRESSID = B.ADDRESSID;

SELECT A.CITY, A.COUNTRYREGION, B.ADDRESSTYPE
FROM SALESLT.ADDRESS AS A
LEFT JOIN SALESLT.CUSTOMERADDRESS AS B
ON A.ADDRESSID = B.ADDRESSID;

SELECT A.ADDRESSLINE1, A.ADDRESSLINE2
FROM SALESLT.ADDRESS AS A
FULL JOIN SALESLT.CUSTOMERADDRESS AS B
ON A.ADDRESSID = B.ADDRESSID;

-----FUNCTION------

SELECT A.PRODUCTID, MAX(A.SIZE) AS MAXIMUMSIZE FROM SALESLT.PRODUCT AS A
WHERE A.COLOR='BLACK'
GROUP BY A.PRODUCTID;

SELECT PRODUCTID, SUM(LISTPRICE) AS SUMMEDSIZE FROM SALESLT.PRODUCT
GROUP BY PRODUCTID, LISTPRICE
HAVING COUNT(LISTPRICE)=0;

SELECT PRODUCTID FROM SALESLT.PRODUCT
WHERE COLOR='BLACK'
ORDER BY PRODUCTID DESC;

SELECT PRODUCTID, MAX(LISTPRICE) AS MAXLISTING FROM SALESLT.PRODUCT
GROUP BY PRODUCTID, LISTPRICE
HAVING COUNT(LISTPRICE)>1;

CREATE FUNCTION MAXIMUM(@A INT, @B INT)
RETURNS INT
AS
BEGIN
DECLARE @RET INT
IF @A>@B SET @RET = @A 
ELSE SET @RET = @B
RETURN @RET
END;

SELECT DBO.MAXIMUM(26,28) AS GREATER;

CREATE FUNCTION MINIMUM(@A INT, @B INT)
RETURNS INT
AS
BEGIN
DECLARE @RET INT
IF @A<@B SET @RET = @A
ELSE SET @RET = @B
RETURN @RET
END;

SELECT DBO.MINIMUM(60,100) AS SMALLER;

CREATE FUNCTION KELVIN(@A FLOAT)
RETURNS FLOAT
AS 
BEGIN
RETURN @A+273.15
END;

SELECT DBO.KELVIN(1) AS KELVIN;

CREATE FUNCTION CELCIUS(@A FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN @A-273.15
END;

SELECT DBO.CELCIUS(573.15) AS CELCIUS;

-----GROUP BY WITH HAVING-----

SELECT PRODUCTID, PRODUCTNUMBER FROM SALESLT.PRODUCT
GROUP BY PRODUCTID, PRODUCTNUMBER
HAVING COUNT(PRODUCTNUMBER)=1;

------SUB QUERIES-------
 SELECT CUSTOMERID, ADDRESSTYPE FROM SALESLT.CustomerAddress
 UNION 
 SELECT CITY, COUNTRYREGION FROM SALESLT.Address WHERE CITY = 'TOTONTO';

 ----STORED PROCEDURE----
 CREATE PROCEDURE SUBSTRACTION_PRO
@X INT, @Y INT
AS
SELECT(@X-@Y);
EXEC SUBSTRACTION_PRO 3,1;

CREATE PROCEDURE ADDITION_PRO
@X INT, @Y INT
AS
SELECT(@X+@Y);
EXEC ADDITION_PRO 9,1;

 CREATE PROCEDURE AVERAGE_PRO
@X INT, @Y INT
AS
SELECT(@X+@Y)/2;
EXEC AVERAGE_PRO 3,1;

CREATE PROCEDURE KELVIN_PRO
@X FLOAT
AS
SELECT (@X+273.15);
EXEC KELVIN_PRO 0;


