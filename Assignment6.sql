USE [AdventureWorksLT2022]
GO

SELECT [ProductID]
      ,[Name]
      ,[ProductNumber]
      ,[Color]
      ,[StandardCost]
      ,[ListPrice]
      ,[Size]
      ,[Weight]
      ,[ProductCategoryID]
      ,[ProductModelID]
      ,[SellStartDate]
      ,[SellEndDate]
      ,[DiscontinuedDate]
      ,[ThumbNailPhoto]
      ,[ThumbnailPhotoFileName]
      ,[rowguid]
      ,[ModifiedDate]
  FROM [SalesLT].[Product]

GO
---------------------------------------------------------------------FUNCTION CREATION-----------------------------------------------------------------------------------

--Addition
CREATE FUNCTION ADDITION(@X INT, @Y INT)
RETURNS INT
AS
BEGIN
DECLARE @SUM INT = @X+@Y
RETURN @SUM
END;

SELECT DBO.ADDITION(20,10) AS ADDITION;

--SUBSTRACTION
CREATE FUNCTION SUBSTRACTION(@X INT, @Y INT)
RETURNS INT
AS
BEGIN 
DECLARE @DIFF INT = @X-@Y
RETURN @DIFF
END;

SELECT DBO.SUBSTRACTION(20,10) AS SUBSTRACTION;

CREATE PROCEDURE SUBSTRACTION_PRO

@X INT, @Y INT
AS
SELECT(@X-@Y);
EXEC SUBSTRACTION_PRO 3,1 AS SUBTRACT VALUE;

--MULTIPLICATION
CREATE FUNCTION MULTIPLICATION(@X INT, @Y INT)
RETURNS INT
AS
BEGIN
RETURN @X*@Y
END;

SELECT DBO.MULTIPLICATION(5,5) AS MULTIPLICATION;

--DIVISION
CREATE FUNCTION DIVISION(@X INT, @Y INT)
RETURNS INT
AS
BEGIN
RETURN @X/@Y
END;

SELECT DBO.DIVISION(10,2) AS DIVISION;

--SQUARE OF A NUMBER
CREATE FUNCTION SQUARE(@X INT)
RETURNS INT
AS
BEGIN
RETURN @X*@X
END;

SELECT DBO.SQUARE(2) AS SQUARE;

--CUBE OF A NUMBER
CREATE FUNCTION CUBE(@X INT)
RETURNS INT
AS
BEGIN
RETURN @X*@X*@X
END;

SELECT DBO.CUBE(2) AS CUBE;

--AVERAGE OF 5 NUMBERS
CREATE FUNCTION AVG5(@A INT, @B INT, @C INT, @D INT, @E INT)
RETURNS INT
AS
BEGIN
RETURN (@A+@B+@C+@D+@E)/2;
END;

SELECT DBO.AVG5(2,2,2,2,2) AS AVERAGE;

--MAXIMUM OF TWO NUMBERS
CREATE FUNCTION MAXIMUM(@A INT, @B INT)
RETURNS INT
AS
BEGIN
DECLARE @RET INT
IF @A>@B SET @RET = @A 
ELSE SET @RET = @B
RETURN @RET
END;

SELECT DBO.MAXIMUM(26,28) AS GREATER;

--MINIMUM OF TWO NUMBERS
CREATE FUNCTION MINIMUM(@A INT, @B INT)
RETURNS INT
AS
BEGIN
DECLARE @RET INT
IF @A<@B SET @RET = @A
ELSE SET @RET = @B
RETURN @RET
END;

SELECT DBO.MINIMUM(60,100) AS SMALLER;

--CONVERTING CELCIUS TO KELVIN
CREATE FUNCTION KELVIN(@A FLOAT)
RETURNS FLOAT
AS 
BEGIN
RETURN @A+273.15
END;

SELECT DBO.KELVIN(1) AS KELVIN;

--CONVERTING KELVIN TO CELCIUS
CREATE FUNCTION CELCIUS(@A FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN @A-273.15
END;

SELECT DBO.CELCIUS(573.15) AS CELCIUS;

---AREA OF RIGHT ANGLED TRIANGLE
CREATE FUNCTION TRIANGLE(@A FLOAT, @B FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 0.5*@A*@B
END;

SELECT DBO.TRIANGLE(2,2) AS AREA_TRIANGLE;

---AREA OF RECTANGLE
CREATE FUNCTION RECTANGLE(@A FLOAT, @B FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN @A*@B
END;

SELECT DBO.RECTANGLE(2,4) AS AREA_RECTANGLE;

---AREA OF CIRCLE
CREATE FUNCTION CIRCLE(@A FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 3.14*@A*@A
END;

SELECT DBO.CIRCLE(2) AS AREA_CIRCLE;

---PERIMETER OF CIRCLE
CREATE FUNCTION PERICIRCLE(@A FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 2*@A*3.14
END;

SELECT DBO.PERICIRCLE(2) AS PERIMETER_CIRCLE;

--PERIMETER OF RECTANGLE
CREATE FUNCTION PERIRECTANGLE(@A FLOAT,@B FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 2*(@A+@B)
END;

SELECT DBO.PERIRECTANGLE(2,4) AS PERIMETER_RECTANGLE;

--PERIMETER OF TRIANGLE
CREATE FUNCTION PERITRIANGLE(@A FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN @A+@A+@A
END;

SELECT DBO.PERITRIANGLE(2) AS PERIMETER_TRIANGLE;

--VOLUME OF CLYINDER
CREATE FUNCTION AREACLY(@A FLOAT,@B FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 3.14*@A*@A*@B
END;

SELECT DBO.AREACLY(2,4) AS VOLUME_CLYINDER;

--AREA OF CLYINDER
CREATE FUNCTION VOLCLY(@A FLOAT, @B FLOAT)
RETURNS FLOAT
AS
BEGIN
RETURN 3.14*@A*@B
END;

SELECT DBO.VOLCLY(2,4) AS AREA_CYLINDER;

--AREA OF HOUSE
CREATE FUNCTION AREAHOUSE(@A FLOAT)
RETURNS FLOAT
AS
BEGIN 
RETURN @A+@A+@A+@A
END;

SELECT DBO.AREAHOUSE(10) AS AREA_HOUSE;


--------------------------------------------------------------------------- VIEWS------------------------------------------------------------------------------------------
CREATE VIEW WATCH1 AS (
SELECT * FROM SalesLT.Address
);
SELECT * FROM WATCH1;

CREATE VIEW WATCH2 AS (
SELECT COLOR FROM SalesLT.Product
);
SELECT * FROM WATCH2;

CREATE VIEW WATCH3 AS (
SELECT NAME FROM SalesLT.Product
);
SELECT * FROM WATCH3;

CREATE VIEW WATCH4 AS (
SELECT PRODUCTID FROM SalesLT.Product
);
SELECT * FROM WATCH4;

CREATE VIEW WATCH5 AS (
SELECT PRODUCTNUMBER FROM SalesLT.Product
);
SELECT * FROM WATCH5;

CREATE VIEW WATCH6 AS (
SELECT STANDARDCOST FROM SalesLT.Product
);
SELECT * FROM WATCH6;

CREATE VIEW WATCH7 AS (
SELECT LISTPRICE FROM SalesLT.Product
);
SELECT * FROM WATCH7;

CREATE VIEW WATCH8 AS (
SELECT SIZE FROM SalesLT.Product
);
SELECT * FROM WATCH8;

CREATE VIEW WATCH9 AS (
SELECT WEIGHT FROM SalesLT.Product
);
SELECT * FROM WATCH9;

CREATE VIEW WATCH10 AS (
SELECT PRODUCTCATEGORYID FROM SalesLT.Product
);
SELECT * FROM WATCH10;

CREATE VIEW WATCH11 AS (
SELECT PRODUCTMODELID FROM SalesLT.Product
);
SELECT * FROM WATCH11;

CREATE VIEW WATCH12 AS (
SELECT SELLSTARTDATE FROM SalesLT.Product
);
SELECT * FROM WATCH12;

CREATE VIEW WATCH13 AS (
SELECT SELLENDDATE FROM SalesLT.Product
);
SELECT * FROM WATCH13;

CREATE VIEW WATCH14 AS (
SELECT DISCONTINUEDDATE FROM SalesLT.Product
);
SELECT * FROM WATCH14;

CREATE VIEW WATCH15 AS (
SELECT MODIFIEDDATE FROM SalesLT.Product
);
SELECT * FROM WATCH15;

CREATE VIEW WATCH16 AS (
SELECT FIRSTNAME FROM SalesLT.Customer
);
SELECT * FROM WATCH16;

CREATE VIEW WATCH17 AS (
SELECT MIDDLENAME FROM SalesLT.Customer
);
SELECT * FROM WATCH17;

CREATE VIEW WATCH18 AS (
SELECT LASTNAME FROM SalesLT.Customer
);
SELECT * FROM WATCH18;

CREATE VIEW WATCH19 AS (
SELECT EMAILADDRESS FROM SalesLT.Customer
);
SELECT * FROM WATCH19;

CREATE VIEW WATCH20 AS (
SELECT TITLE FROM SalesLT.Customer
);
SELECT * FROM WATCH20;

------------------------------------------------------------------------------SUB QUERIES--------------------------------------------------------------------

SELECT LASTNAME, FIRSTNAME FROM SALESLT.CUSTOMER UNION
SELECT LASTNAME, FIRSTNAME FROM SALESLT.CUSTOMER WHERE FIRSTNAME LIKE 'H%';

SELECT MIDDLENAME, LASTNAME FROM SALESLT.CUSTOMER UNION
SELECT MIDDLENAME, LASTNAME FROM SALESLT.CUSTOMER WHERE LASTNAME LIKE 'B%';

SELECT FIRSTNAME, MIDDLENAME FROM SALESLT.CUSTOMER UNION
SELECT FIRSTNAME, MIDDLENAME FROM SALESLT.CUSTOMER WHERE LASTNAME LIKE 'B%';

SELECT TITLE, FIRSTNAME, MIDDLENAME, LASTNAME FROM SALESLT.CUSTOMER UNION
SELECT TITLE, FIRSTNAME, MIDDLENAME, LASTNAME FROM SALESLT.CUSTOMER WHERE TITLE = 'MR.';

SELECT NAME, SIZE FROM SALESLT.PRODUCT UNION
SELECT NAME, SIZE FROM SALESLT.PRODUCT WHERE SIZE = '58';

SELECT NAME FROM SALESLT.PRODUCT UNION
SELECT NAME FROM SALESLT.PRODUCT WHERE COLOR = 'RED';

SELECT NAME FROM SALESLT.PRODUCT UNION
SELECT NAME FROM SALESLT.PRODUCT WHERE COLOR = 'BLACK';

SELECT NAME FROM SALESLT.PRODUCT UNION
SELECT NAME FROM SALESLT.PRODUCT WHERE COLOR = 'BROWN';

SELECT NAME FROM SALESLT.PRODUCT UNION
SELECT NAME FROM SALESLT.PRODUCT WHERE COLOR = 'BLUE';

SELECT NAME FROM SALESLT.PRODUCT UNION
SELECT NAME FROM SALESLT.PRODUCT WHERE COLOR = 'PINK';

SELECT PRODUCTNUMBER FROM SALESLT.PRODUCT UNION
SELECT PRODUCTNUMBER FROM SALESLT.PRODUCT WHERE LISTPRICE>1000;

SELECT PRODUCTMODELID FROM SALESLT.PRODUCT UNION
SELECT PRODUCTMODELID FROM SALESLT.PRODUCT WHERE LISTPRICE<500;

SELECT PRODUCTCATEGORYID FROM SALESLT.PRODUCT UNION
SELECT PRODUCTCATEGORYID FROM SALESLT.PRODUCT WHERE WEIGHT < 1000;

SELECT PRODUCTID FROM SALESLT.PRODUCT UNION
SELECT PRODUCTID FROM SALESLT.PRODUCT WHERE NAME LIKE 'H%';

SELECT LISTPRICE FROM SALESLT.PRODUCT UNION
SELECT LISTPRICE FROM SALESLT.PRODUCT WHERE PRODUCTNUMBER LIKE 'H%';
---------------------------------------------------------------------STORED PROCEDURE--------------------------------------------------------------------------
--1
CREATE PROCEDURE SELECTEVERY
AS
SELECT * FROM SALESLT.CUSTOMER;

EXEC SELECTEVERY;

--2
CREATE PROCEDURE SELECTINGCOLOR
AS 
SELECT COLOR FROM SALESLT.PRODUCT;

EXEC SELECTINGCOLOR;

--3
CREATE PROCEDURE ALLPRODUCTNUMBER
AS
SELECT PRODUCTNUMBER FROM SALESLT.PRODUCT;

EXEC ALLPRODUCTNUMBER;

--4
CREATE PROCEDURE ALLPRODUCTMODELID
AS
SELECT PRODUCTMODELID FROM SALESLT.PRODUCT;

EXEC ALLPRODUCTMODELID;

--5
CREATE PROCEDURE ALLFIRSTNAME
AS
SELECT FIRSTNAME FROM SALESLT.CUSTOMER;

EXEC ALLFIRSTNAME;







